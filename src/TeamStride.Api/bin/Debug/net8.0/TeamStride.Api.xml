<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TeamStride.Api</name>
    </assembly>
    <members>
        <member name="T:TeamStride.Api.Controllers.AthletesController">
            <summary>
            Manages athlete-related operations including roster management, profile updates, and status tracking
            </summary>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.GetRoster(System.Int32,System.Int32)">
            <summary>
            Retrieves a paginated list of athletes in the current team's roster
            </summary>
            <param name="pageNumber">Page number (1-based)</param>
            <param name="pageSize">Number of items per page</param>
            <returns>Paginated list of athletes</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.GetById(System.Guid)">
            <summary>
            Retrieves a specific athlete by their ID
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <returns>The athlete details</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.Create(TeamStride.Application.Athletes.Dtos.CreateAthleteDto)">
            <summary>
            Creates a new athlete in the current team
            </summary>
            <param name="dto">The athlete creation data</param>
            <returns>The newly created athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.Update(System.Guid,TeamStride.Application.Athletes.Dtos.UpdateAthleteDto)">
            <summary>
            Updates an existing athlete's information
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <param name="dto">The updated athlete data</param>
            <returns>The updated athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.Delete(System.Guid)">
            <summary>
            Removes an athlete from the team
            </summary>
            <param name="id">The athlete's unique identifier</param>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.UpdateRole(System.Guid,TeamStride.Domain.Entities.AthleteRole)">
            <summary>
            Updates an athlete's role (Athlete/Captain)
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <param name="role">The new role</param>
            <returns>The updated athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.UpdatePhysicalStatus(System.Guid,System.Boolean)">
            <summary>
            Updates an athlete's physical form status
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <param name="hasPhysical">Whether the physical form is on file</param>
            <returns>The updated athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.UpdateWaiverStatus(System.Guid,System.Boolean)">
            <summary>
            Updates an athlete's waiver signed status
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <param name="hasSigned">Whether the waiver has been signed</param>
            <returns>The updated athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.UpdateProfile(System.Guid,TeamStride.Application.Athletes.Dtos.UpdateAthleteProfileDto)">
            <summary>
            Updates an athlete's profile information
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <param name="profile">The updated profile data</param>
            <returns>The updated athlete</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.GetCaptains">
            <summary>
            Retrieves all team captains
            </summary>
            <returns>List of team captains</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.AthletesController.IsInTeam(System.Guid)">
            <summary>
            Checks if an athlete is a member of the current team
            </summary>
            <param name="id">The athlete's unique identifier</param>
            <returns>True if the athlete is in the team, false otherwise</returns>
        </member>
        <member name="M:TeamStride.Api.Controllers.HealthController.Get">
            <summary>
            Gets the health status of the API
            </summary>
            <returns>Health status and timestamp</returns>
            <response code="200">API is healthy</response>
        </member>
    </members>
</doc>
